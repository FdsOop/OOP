#include<iostream>
#include<string.h>
#include<list>
using namespace std;

class Queue {
public:
    int a;
    list<int> s;
    list<int>::iterator itr;

    void push() {
        cout << "\nEnter a number: ";
        cin >> a;
        s.push_back(a); // This line was outside the push function.
        cout << a << " has been added to the queue.\n";
    }

    void displaystack() {
        cout << "\nThe elements in the queue are:\n";
        if (s.empty()) {
            cout << "queue is empty.\n";
            return;
        }
        for (itr = s.begin(); itr != s.end(); itr++) {
            cout << *itr << "\t";
        }
        cout << endl;
    }

    void pop() {
        if (s.empty()) {
            cout << "\nThe queue is empty. Nothing to pop.\n";
            return;
        }
        itr = s.end();
        itr--; // Move iterator to the last element
        cout << "\nThe element popped out of the queue is " << *itr << endl;
        s.pop_back(); // Remove the last element
    }
};

int main() {
    Queue p;
    int choice;
    char ans;

    do {
        cout << "\n1. Add element\n2. Delete element\n3. Display stack elements";
        cout << "\nEnter the operation you want to perform: ";
        cin >> choice;

        switch (choice) {
            case 1: p.push();
                break;
            case 2: p.pop();
                break;
            case 3: p.displaystack();
                break;
            default:
                cout << "\nInvalid choice! Please select a valid option.\n";
                break;
        }

        cout << "\nDo you want to perform any other operation? (Y/N): ";
        cin >> ans;
    } while (ans == 'Y' || ans == 'y');

    return 0;
}
